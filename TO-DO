Completed Items

- A release target for the make files.
- Aliases.
- Allow log clearing.
- Allow resending of messages.
- Allow resetting of Chat session keys via context menu.
- Allow sharing of participant pairs.
- Append new messages in Member Chat.
- Application icon.
- As the half-response does not produce a response, the automatic response's
  result is ignored.
- Asynchronous database writes.
- Banner text may shadow member status in Member Chat.
- Bind recipient and sender.
- Broadcast a reminder to the Settings activity if a Chat message has been
  received while the Settings activity is active.
- Calling via multiple neighbors is chaotic.
- Capitalize SipHash input.
- Change case of final-static objects in Neighbor, Settings, SipHash,
- Chat activity state is not retained. States of selected items will not be
  retained as such states are expensive.
- Chat messages will appear blue if they are assembled from the internal log
  and are beyond the specific time window.
- Compare provided encryption and signature public keys.
- Complete Cryptography.pkiEncrypt().
- Compress IPv6 Scope ID field when hidden.
- Connect the state of the Call button to the number of selected participants
  (Chat).
- Connecting status until in/out data has been received/transmitted.
- Connection status text colors.
- Context menu items in Member Chat: delete all, delete selected.
- Copying of read-only values.
- Custom key streams via context menus.
- Database method for retrieving neighbor OIDs.
- Decide if the State class requires cryptographic data.
- Deleting a connected neighbor and quickly re-adding it is problematic. If
  the current thread has been interrupted, exit run().
- Deleting a neighbor does not cause an immediate disconnect.
- Depict Android version in About. New About.java file too.
- Depict connection status in the Chat activity.
- Deploy new user name to Fire channels.
- Describe the Ozone feature.
- Detect removal of neighbors.
- Detect removal of participants.
- Determine gradle's version in the make files.
- Digest of PEM(certificate).
- Disable Delete Fiasco Keys, Delete Public Keys on Participants context menu
  if information is not available. Not necessary.
- Disable echo on low memory. Cannot. Instead, clear queues.
- Disable proxy fields for non-TCP.
- Display count of queued echo packets per neighbor.
- Display date and time of sent message.
- Display destination's name during session initialization.
- Display exchange status in the Participants table. Icons.
- Display information pertaining to the owner's public keys.
- Display message-retrieval action.
- Display neighbors contents.
- Display remote server's certificate information. Public key fingerprint.
- Do not enqueue messages in disconnected neighbors.
- Do not save a key stream unless a response is received.
- Duplicates Cryptography. Removed methods from State.
- Dynamic DNS for home servers. Functional.
- Dynamic textview objects trim text. Append an extra new line.
- ECDSA.
- EPKS description bubble.
- EPKS.
- Elongate messages in Member Chat.
- Enable Settings widgets after an initial password is accepted.
- Exit menus.
- Expand messages to multiples of 8 KiB.
- Fire channels must be retained if the Fire activity is dismissed.
- Fire through SmokeStack.
- Fire. ("AES/CTS/NoPadding")
- Foreground service, optional.
- Generate and separate.
- HTTP proxy.
- Identity-sharing confirmation from SmokeStack.
- If a SipHash ID is deleted, its corresponding participants entry should also
  be removed. Foreign key constraints.
- Improve PBKDF2 uses. Initially, generate a temporary stream of 20 bytes
  (SHA-1). Afterwards, generate a stream using the temporary stream as
  password material. The length of the second stream varies per application.
- Inadvertent calling may sever an established session.
- Inbound database table.
- Include network information in neighbors pertaining to errors.
- Increase network buffer sizes for large attachments.
- Individual member pages.
- Inspect destination tags.
- Inspect length in substring() usage.
- Introduce termination logic on critical TCP read/write errors.
- Java serialization requires safety.
  (http://www.oracle.com/technetwork/java/seccodeguide-139067.html#8)
- Kernel.
- Key-sharing messages should be written to smoke.db.
- Last activity and Member Chat. Restore.
- Less populateParticipants() in the Chat activity.
- Local congestion control.
- Logging class. See Database::writeLog().
- Material icons.
- Member status in Member Chat.
- MemberChat attachment.
- Messages from the past may trigger presence.
- Messages may arrive while the Settings activity is the primary activity.
  Calls are not logged.
- Messages must be temporarily retained if the Chat activity loses focus.
- Modify Settings so that TCP neighbors support SOCKS proxies.
- Neighbor class.
- Neighbor details should be optional.
- Neighbors periodic refresh.
- Network status in Member Chat.
- New date format: YYYY-MM-DD. ISO 8601.
- New messages should be at the top of the view; Member Chat.
- Next (Tab) order; Settings.
- Non-exclusive database transactions.
- Notify of other member messages in Member Chat.
- Notify the Chat activity of new participants.
- Optimize loops.
- Optional per-participant signatures.
- Organic half-and-half: resolve collisions. As Smoke is not ordered, order is
  impossible to predict.
- Outbound database table.
- Outbound queues must be purged on parent neighbor removal.
- Participant list may be large. Create a special State container and thread
  for retrieval.
- Participant status icon should not be modified if newly-received message is
  from an Ozone.
- Per request, include the source in the application bundle.
- Periodic key publishing requires more intelligence.
- Populate Chat member list without accessing the database.
- Potential database locking problem with repeated replacement of neighbor
  objects. Replaced replace() with intelligent insert().
- Prepare for Chat, E-Mail, etc. public key pairs.
- Prevent-sleep option in Settings.
- Preview attachment.
- Prompt for neighbor removal.
- Purging of neighbor queues should occur off of the main thread.
- Push sent messages from Member Chat to Chat.
- Receiving requested keys which do not include signatures should be functional.
- Record received messages in Chat from Member Chat.
- Refresh context menu on Chat table.
- Remote storage of messages. SmokeStack.
- Remove UI-related references in Settings::prepareListeners()::...::run().
- Remove expired private keystreams.
- Replace Date object with AtomicLong objects.
- Replace the (final) iterations variable in
- Requesting offline messages stalls if there are several active neighbors.
  https://developer.android.com/reference/android/net/wifi/
  WifiManager.WifiLock.html
- Reset option in Authenticate activity.
- Reset option. Remove smoke.db. Reset widget states.
- Reset spinners after credentials are initialized.
- Resize Member Chat bubbles according to contents.
- Retain Chat participant states on refresh.
- Retain Chat widget selection states. Remove State objects if participants
  are removed via the Settings activity.
- Retain first-contact server certificate. Inspect stored bytes with received
  bytes.
- Retrieve a subset of message data in Member Chat. New data via scroll.
- Retrieve/store user name.
- Return message-read status in status messages.
- Rich context menu containing other members.
- SQLite secure delete (onConfigure()).
- Save attachment.
- Schedulers may silently fail. try-catch blocks!
- Scroll on sending of local messages; Member Chat.
- Scroll within scroll in Fire channels.
- Send messages in Member Chat.
- Settings::prepareListeners()::...::run().
- Sign encryption and signature keys as a pair.
- Signed release.
- Simple binary status in Chat. Kernel scheduler.
- SipHash (https://en.wikipedia.org/wiki/SipHash).
- SipHash description bubble.
- Smoke echo? Expensive. Optional.
- Sort table contents.
- Spinner objects in the neighbors table bleed. The table will expand as
  necessary.
- Status messages.
- Synchronized methods or containers? Both.
- TCP socket setPerformancePreferences().
- TcpNeighbor classes.
- The Bundle object is not saved.
- The Socket class supports the Proxy class.
- The initial call (1/2-1/2) should store the generated stream in a map
  (or hash).
- The timestamp in participants_messages must be used for sorting.
- UDP multicast.
- UDP sockets.
- Upon receiving a timely response, the total key stream should be saved to
  smoke.db. If a timely response is not received, the partial data should be
  purged.
- Vacuum databases.
- Validate the SipHash implementation. Please see SipHash::test1().
- Verify hexadecimal characters of SipHash identities.
- When verifying signatures, recipients should retrieve appropriate personal
  identity digests.
- Wrap neighbor text.
- Zero ports are valid. If a system is allowing connections on port
  zero, Smoke will be able to connect to it.

Future Items

- (130 / 16 + 1) * 16 + 8 <= 154.
- Automatic SipHash hyphens.
- Bluetooth
  (http://www.oracle.com/technetwork/articles/javame/index-156193.html).
- Disable Chat:Send if there is at least one selected participant without a
  session.
- Introduce real-time typing status.
- NTRU via BouncyCastle.
- Names or PINs alongside SipHashes. The extra bits will increase the
  possibilities.
- Replace Chat member view with a recycler view.
- Replace INTEGER_BYTES with Integer.BYTES and LONG_BYTES with Long.BYTES.
- Resolve DNS through a proxy if a proxy is defined.
- Themes, of course.

Remaining Items

- Bubbles are too narrow on wide devices.
- Drawers.
- Gallery integration. Zoom.
- Juggernaut.
  (https://en.wikipedia.org/wiki/Password_Authenticated_Key_Exchange_by_Juggling)
  (https://www.borelly.net/cb/docs/javaBC-1.4.8/prov/org/bouncycastle/crypto/agreement/jpake/JPAKEParticipant.html)
- Notification causes abnormal exit on Android 7.
- Separate Settings:
  Neighbor Servers
  Ozone, Participants
  Password, Public Data
- Steam and Vapor.
- Store a digest of the secret string (Miscellaneous.showTextInputDialog()).
- Stronger surreptitious forwarding. Larger RSA keys.
- Translations.
